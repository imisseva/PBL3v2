<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>